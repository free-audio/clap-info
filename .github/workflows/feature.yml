name: Feature

on:
  pull_request:
    branches:
      - main

jobs:
  build_feature:
    name: Build feature
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            name: linux
            dir_build: ./build
            file_name: clap-info
          - os: macos-latest
            name: mac-universal
            dir_build: ./build
            file_name: clap-info
            cmake_args: -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
          - os: windows-latest
            name: win-x64
            dir_build: ./build/Release
            file_name: clap-info
            file_ext: .exe
            cmake_args: -G"Visual Studio 17 2022" -A x64
          - os: windows-latest
            name: win-arm64ec
            dir_build: ./build/Release
            file_name: clap-info
            file_ext: .exe
            cmake_args: -G"Visual Studio 17 2022" -A arm64ec


    steps:
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: choco install zip

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build binary
        run: |
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake_args }}
          cmake --build ./build --config Release

      - name: List files
        run: ls "${{ matrix.dir_build }}"

      - name: Test binary
        run: ${{ matrix.dir_build }}/${{ matrix.file_name }}${{ matrix.file_ext }} -h

      - name: Compress binary
        run: |
          cd "${{ matrix.dir_build }}"
          zip ${{ matrix.file_name }}-${{ matrix.name }}.zip ${{ matrix.file_name }}${{ matrix.file_ext }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.file_name }}-${{ matrix.name }}.zip
          path: ${{ matrix.dir_build }}/${{ matrix.file_name }}-${{ matrix.name }}.zip
